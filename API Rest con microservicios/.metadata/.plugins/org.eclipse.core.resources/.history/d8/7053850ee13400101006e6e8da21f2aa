package com.jose.vuelo.servicies;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;


import com.jose.commons.dto.VueloDTOGet;
import com.jose.commons.dto.VueloDTOPost;
import com.jose.commons.models.entities.Vuelo;
import com.jose.commons.servicies.CommonServiceImpl;
import com.jose.pedido.mappers.VueloGetMapper;
import com.jose.pedido.mappers.VueloPostMapper;
import com.jose.pedido.models.repositories.VueloRepository;

@Service
public class VueloServiceImpl  extends CommonServiceImpl<VueloDTOPost, Vuelo, VueloPostMapper, VueloRepository>
implements VueloService{
	
	@Autowired
	private VueloGetMapper getMapper;


		@Override
		@Transactional(readOnly = true)
		public List<VueloDTOGet> listarGet() {
			List<VueloDTOGet> dtos = new ArrayList<>();
			repository.findAll().forEach(avion-> {
				dtos.add(getMapper.entityToDTO(avion));
			});
			return dtos;
		}
	
		@Override
		@Transactional(readOnly = true)
		public Optional<VueloDTOGet> obtenerPorIdGet(Long id) {
			Optional<Vuelo> vuelo = repository.findById(id);
			if (vuelo.isPresent()) {
				return Optional.of(getMapper.entityToDTO(vuelo.get()));
			}
			return Optional.empty();
			
		}
	
		@Override
		@Transactional
		public VueloDTOPost editar(VueloDTOPost dto, Long id) {
			Optional<Vuelo> vuelo = repository.findById(id);
			if (vuelo.isPresent()) {
				Vuelo vueloDb = mapper.dtoEntity(dto);
				vueloDb.setId(id);
				repository.save(vueloDb);
				return mapper.entityToDTO(vueloDb);
			}
			return null;
		}
	
		@Override
		@Transactional
		public VueloDTOPost insertar(VueloDTOPost dto) {
			Vuelo vueloDb = mapper.dtoEntity(dto);
			repository.save(vueloDb);
			return mapper.entityToDTO(vueloDb);
		}
	
		@Override
		@Transactional
		public VueloDTOPost eliminar(Long id) {
			Optional<Vuelo> vuelo = repository.findById(id);
			if(vuelo.isPresent()) {
				repository.deleteById(id);
				return mapper.entityToDTO(vuelo.get());
			}
			return null;
	}
}
