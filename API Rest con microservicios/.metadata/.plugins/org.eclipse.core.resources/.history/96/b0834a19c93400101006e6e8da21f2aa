package com.api.cliente.services;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.api.cliente.mappers.ClienteMapper;
import com.api.cliente.models.repositories.ClienteRepository;
import com.jose.commons.dto.AerolineaDTO;
import com.jose.commons.models.entities.Aerolinea;
import com.jose.commons.servicies.CommonServiceImpl;

@Service
public class AerolineaServiceImpl  extends
CommonServiceImpl<AerolineaDTO,Aerolinea,ClienteMapper,ClienteRepository> implements ClienteService{

	@Override
	@Transactional(readOnly =true)
	public List<AerolineaDTO> listar() {
		List<AerolineaDTO> dtos = new ArrayList<>();
		repository.findAll().forEach(aerolinea -> {
			dtos.add(mapper.entityToDTO(aerolinea));
		});
		return dtos;
	}

	@Override
	@Transactional(readOnly =true)
	public Optional<AerolineaDTO> obtenerPorId(Long id) {
		Optional<Aerolinea> aerolinea =repository.findById(id);
		if(aerolinea.isPresent()) {
			return Optional.of(mapper.entityToDTO(aerolinea.get()));
		}
		return Optional.empty();
	}

	@Override
	@Transactional
	public AerolineaDTO editar(AerolineaDTO dto, Long id) {
		Optional<Aerolinea> aerolinea =repository.findById(id);
		if(aerolinea.isPresent()) {
			Aerolinea aerolineaDb = mapper.dtoEntity(dto);
			aerolineaDb.setId(id);
			repository.save(aerolineaDb);
			return mapper.entityToDTO(aerolineaDb);
		}
		return null;
	}

	@Override
	@Transactional
	public AerolineaDTO insertar(AerolineaDTO dto) {
		Aerolinea aerolinea = mapper.dtoEntity(dto);
		repository.save(aerolinea);
		return mapper.entityToDTO(aerolinea);
	}

	@Override 
	@Transactional
	public AerolineaDTO eliminar(Long id) {
		Optional<Aerolinea> aerolinea =repository.findById(id);
		if(aerolinea.isPresent()) {
			repository.deleteById(id);
			return mapper.entityToDTO(aerolinea.get());
		}
		return null;
	}
}
